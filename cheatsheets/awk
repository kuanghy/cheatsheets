# awk 模式匹配与文本处理工具

命令格式： awk 动作 文件名

# 打印文件的所有行
awk '{print $0}' file

# 从标准输入（stdin）读入文本
echo 'this is a test' | awk '{print $0}'

# 特殊变量：NR NF 1 $2

- NR: 表示记录数量，在执行过程中对应当前行号（即当前处理的是第几行）
- NF: 表示字段数量，在执行过程总对应当前行的字段数
- $0: 这个变量包含执行过程中当前行的文本内容
- $1: 第一个字段的文本内容（字段默认的分隔符为空格和制表符）
- $2: 第二个字段的文本内容
- $NF: 最后一个字段的文本内容

# 输出指定列

```
$ echo 'this is a test' | awk '{print $3}'
a
```

# 用 -F 参数指定分隔符
awk -F ':' '{print $1}' /etc/passwd

# 使用 $(NF-1) 输出倒数第二个字段

```
$ awk -F ':' '{print $1, $(NF-1)}' /etc/passwd
root /root
daemon /usr/sbin
bin /bin
sys /dev
sync /bin
```

# 使用 NR 输出行号

```
$ awk -F ':' '{print NR ") " $1, $(NF-1)}' /etc/passwd
1) root /root
2) daemon /usr/sbin
3) bin /bin
4) sys /dev
5) sync /bin
```

# 常用函数:

- toupper()：字符转为大写
- tolower()：字符转为小写
- length()：返回字符串长度
- substr()：返回子字符串
- rand()：随机数

```
$ awk -F ':' '{print toupper($1)}' /etc/passwd
ROOT
DAEMON
BIN
SYS
SYNC
```
